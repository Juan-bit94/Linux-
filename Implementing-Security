# Implementing Security
- These days, security is at the top of every system administrator's list of worries. Implementing security is a vital role for every Linux administrator.
- The following sections walk through the server software packages that you may run into as you implement security in Linux servers.
## Authentication Server
- The core security for Linux servers is the standard userid and password assigned to each individual user on the system and stored in either the /etc/passwd (on non-secure legacy systems) or the /etc/shadow file.
- Each Linux server maintians its own list of valid user accounts that have access on that server. 
- There are a few different methods for sharing user account databases across multiple Linux servers on a network.
## NIS
- The Network Information System (NIS) is a directory service that allows both clients and servers to share a common naming directory.
- The NIS naming directory is often used as a common repository for user accounts, hostnames, and even email information on a local network.
- The NIS+ protocol expands on NIS by adding security features. 
- The nis-utils package is an open source project for implementing an NIS and NIS+ directory in a Linux environment. 
## Kerberos
- Kerberos was developed at MIT as a secure authenticiation protocol. It uses symmetric-key cryptography to securely authenticate users with a centralized server database.
- The entire authentication process is encrypted, making it a secure method of logging into a Linux server.
- Many common Linux server applications provide plug-in modules to interface with a kerberos database for authenticating application users.
## LDAP
- Network authentication systems have taken off in the commercial networking world. Microsoft's Active Directory system is one example.
- The lightweight Directory Access Protocol (LDAP) is a simple network authentication service to multiple applications and evices on a local network.
- The most popular and free implementation of LDAP in the Linux world is the OpenLDAP package. OpenLDAP allows you to design a hierarchical database to store objects in your network.
- In the hierarchical database, objects are connected in a treelike fashion to one another.
- The hierarchical databases allows you to group objects by types, such as users and servers, or by location, or both. 
